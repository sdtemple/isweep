# isweep real data analysis part 2 (roi)
# Seth D. Temple, sdtemple@uw.edu
# April 27, 2023

import os
import pandas as pd
macro=str(config['CHANGE']['FOLDERS']['STUDY'])
micro=str(config['CHANGE']["ISWEEP"]["ROI"])
yaml=str(config['CHANGE']["FOLDERS"]["YAML"])
sims = pd.read_csv(macro+'/'+micro, sep='\t', header=0)
J = sims.shape[0]
for j in range(J):
	row = sims.iloc[j]
	if not os.path.exists(macro+'/'+str(row.NAME)):
		os.mkdir(macro+'/'+str(row.NAME))
	if not os.path.exists(macro+'/'+str(row.NAME)+'/chr'+str(row.CHROM)):
		os.mkdir(macro+'/'+str(row.NAME)+'/chr'+str(row.CHROM))
	if not os.path.exists(macro+'/'+str(row.NAME)+'/chr'+str(row.CHROM)+'/center'+str(row.BPCENTER)):
		os.mkdir(macro+'/'+str(row.NAME)+'/chr'+str(row.CHROM)+'/center'+str(row.BPCENTER))
	if not os.path.exists(macro+'/'+str(row.NAME)+'/chr'+str(row.CHROM)+'/center'+str(row.BPCENTER)+ '/left'+str(row.BPLEFT)):
		os.mkdir(macro+'/'+str(row.NAME)+'/chr'+str(row.CHROM)+'/center'+str(row.BPCENTER)+ '/left'+str(row.BPLEFT))
	if not os.path.exists(macro+'/'+str(row.NAME)+'/chr'+str(row.CHROM)+'/center'+str(row.BPCENTER)+ '/left'+str(row.BPLEFT)+ '/right'+str(row.BPRIGHT)):
		os.mkdir(macro+'/'+str(row.NAME)+'/chr'+str(row.CHROM)+ '/center'+str(row.BPCENTER)+ '/left'+str(row.BPLEFT)+ '/right'+str(row.BPRIGHT))
	if not os.path.exists(macro+'/'+str(row.NAME)+'/chr'+str(row.CHROM)+'/center'+str(row.BPCENTER)+ '/left'+str(row.BPLEFT)+ '/right'+str(row.BPRIGHT)+'/empty.txt'):
		os.mknod(macro+'/'+str(row.NAME)+'/chr'+str(row.CHROM)+ '/center'+str(row.BPCENTER)+ '/left'+str(row.BPLEFT)+ '/right'+str(row.BPRIGHT)+'/empty.txt')
sims['FOLDER'] = [(macro +'/'+str(sims.iloc[j].NAME)+'/chr'+str(sims.iloc[j].CHROM)+'/center'+str(sims.loc[j].BPCENTER)+'/left'+str(sims.loc[j].BPLEFT)+'/right'+str(sims.loc[j].BPRIGHT)).strip() for j in range(J)]

# include .smk files with rules
include: 'rules/roi.smk'
include: 'rules/analysis.smk'

# snakemake all -c1 -n
rule all:
	input:
		macro+'/doneso.txt',
		# [f"{sim.FOLDER}/isweep.inference.tsv.gz" for sim in sims.itertuples()],
	output:
		yamlout=macro+'/arguments.roi.yaml',
	params:
		yamlpar=macro+'/'+yaml,
	shell:
		'cp {params.yamlpar} {output.yamlout}'
