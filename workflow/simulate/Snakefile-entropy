n=int(float(config['CHANGE']['SIMULATE']['SAMPSIZE']))
ploidy=int(float(config['FIXED']['SIMULATE']['PLOIDY']))
samplesize = n * ploidy

# setup macro folder
import os
macro=str(config['CHANGE']['FOLDERS']['MACRO'])
if not os.path.exists(macro):
	os.mkdir(macro)

# load in experiments, set up micro, simname folders
import pandas as pd
micro=str(config['CHANGE']["FOLDERS"]["MICRO"])
sims = pd.read_csv(micro, sep='\t', header=0)
J = sims.shape[0]
for j in range(J):
	row = sims.loc[j,]
	if not os.path.exists(macro+'/'+str(row.MICROEXP)):
		os.mkdir(macro+'/'+str(row.MICROEXP))
	if not os.path.exists(macro+'/'+str(row.MICROEXP)+'/'+str(row.SIMNAME)):
		os.mkdir(macro+'/'+str(row.MICROEXP)+'/'+str(row.SIMNAME))
sims['FOLDER'] = [macro + '/' + sims.loc[j].MICROEXP + '/' + str(sims.loc[j].SIMNAME) for j in range(J)]
sims = sims.set_index("SIMNAME", drop=False)

# snakemake all -c1 -n
rule all:
	input: [f"{sim.FOLDER}/entropy.tsv" for sim in sims.itertuples()],
        


rule entropy:
	input:
		filein='{macro}/{micro}/outlier1.txt',
	output:
		fileout='{macro}/{micro}/entropy.tsv',
	params:
		scripts=str(config['CHANGE']['FOLDERS']['TERMINALSCRIPTS']),
		samplesize=str(samplesize),
	shell:
		"""
		python {params.scripts}/ibd-entropy.py \
			{wildcards.macro}/{wildcards.micro} \
			{output.fileout} \
			{params.samplesize}
		"""